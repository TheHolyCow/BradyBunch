function plotTimeSeries(V, X, time, plotResults)

    % For state vector, X = [u w q theta z v p r phi psi]'
    
    if plotResults
        
        % ------------------------------------------------------------
        % Elevator plots
        % ------------------------------------------------------------
        % Plot aerodynamic angles
        fig1 = figure;
        plot(time, rad2deg(X(2, :)/V));
        hold on
        plot(time, rad2deg(X(6, :)/V));
        leg = legend('\alpha', '\beta', 'Location', 'best');
        xlabel('Time (sec)')
        ylabel('Aerodynamic Angles (deg)')
        grid on
        
        % Plot body rates
        fig2 = figure;
        plot(time, rad2deg(X(7, :)));
        hold on
        plot(time, rad2deg(X(3, :)));
        plot(time, rad2deg(X_elevator(8, :)));
        leg = legend('p', 'q', 'r', 'Location', 'best');
        xlabel('Time (sec)')
        ylabel('Body Axes Rotation Rates (deg/s)')
        grid on
        
        % Plot body angles 
        fig3 = figure;
        plot(time, rad2deg(X_elevator(9, :)));
        hold on
        plot(time, rad2deg(X_elevator(10, :)));
        plot(time, rad2deg(X_elevator(4, :)));
        leg = legend('\phi', '\theta', '\psi', 'Location', 'best');
        xlabel('Time (sec)')
        ylabel('Body Axes Attitude Angles (deg)')
        grid on
        
        % Plot body velocity 
        fig4 = figure;
        plot(time, X_elevator(1, :));
        hold on
        plot(time, X_elevator(6, :));
        plot(time, X_elevator(2, :));
        leg = legend('u', 'v', 'w', 'Location', 'best');
        xlabel('Time (sec)')
        ylabel('Body Axes Velocities (m/s)')
        grid on
        
end